import re
import regex
from .scraper import Scraper


class TTScraper(Scraper):
    def __init__(self, filename=None, name=None, exploit_type=None, title=None, platform=None, exploit=None, mongoclient=None, date=None):
        ext = ['.tt']
        super().__init__(filename, name, exploit_type, title, platform, exploit, mongoclient, date, ext)
        self.refs = None

    def parse_infos(self):
        if self.is_parsed():
            return

        error = False
        parsed_file = True
        try:
            self.exploit = re.sub(r'#', '', self.exploit)

            values = re.findall(r'(?:\=\=)+\s+([\s\S]*?)\s+(?:\=\=)+', self.exploit)

            if values:
                self.add_to("name", [values[0]])

            self.add_to("refs", re.findall(r'(https?:.*?)\s+', self.exploit))

            URI = self.parse_url()
            self.update_db(URI)

        except Exception as e:
            error, parsed_file = self.found_error(e)

        finally:
            self.update_parsed_obj_db(parsed_file, error)

    def parse_url(self):
        URIs = []

        try:
            URIs.extend(regex.findall(r'(https?:\/\/.*\/.*?)\s+', self.exploit, timeout=5))
        except TimeoutError:
            pass
        try:
            URIs.extend(self.get_basic_url())
        except TimeoutError:
            pass
        try:
            urls = self.get_method_url()
            for uri in urls:
                if not uri.startswith('/'):
                    URIs.append('/' + uri)
        except TimeoutError:
            pass

        return self.extract_url(URIs)
